// This file was generated by [ts-rs](https://github.com/Aleph-Alpha/ts-rs). Do not edit this file manually.

/**
 * Represents events sent to the client.
 */
export type CallbackOptionsEvent = { "LoadingDone": { owner: string, fields: Array<StaticFieldDesc>, } } | { "LoadingErrors": { owner: string, errors: Array<FieldLoadingError>, } } | { "LoadingError": { owner: string, error: string, fields: Array<string>, } } | { "LoadingCancelled": { owner: string, fields: Array<string>, } } | "Destroyed";

export type ComponentOptions = { fields: Array<Field>, uuid: string, };

export type ComponentsOptionsList = { options: Map<string, FieldDesc[]>, };

export type Field = { id: string, value: Value, };

export type FieldDesc = { "Static": StaticFieldDesc } | { "Lazy": LazyFieldDesc };

export type FieldLoadingError = { id: string, err: string, };

export type FieldsValidationErrors = { errors: Map<string, string>, };

export type LazyFieldDesc = { id: string, name: string, desc: string, };

export type StaticFieldDesc = { id: string, name: string, desc: string, required: boolean, default: Value | null, interface: ValueInput, };

export type Value = { "Boolean": boolean } | { "Number": bigint } | { "Numbers": Array<bigint> } | { "String": string } | { "Strings": Array<string> } | { "Directories": Array<string> } | { "Files": Array<string> } | { "File": string } | { "Directory": string } | { "KeyStrings": { [key in string]?: Array<string> } } | { "KeyString": { [key in string]?: string } } | { "KeyNumbers": { [key in string]?: Array<bigint> } } | { "KeyNumber": { [key in string]?: bigint } };

export type ValueInput = "Checkbox" | "Number" | "String" | { "Numbers": Array<bigint> } | { "Strings": Array<string> } | { "KeyNumber": Map<string, number> } | { "KeyNumbers": Map<string, number[]> } | { "KeyString": Map<string, string> } | { "KeyStrings": Map<string, string[]> } | "Directories" | "Files" | "File" | "Directory" | { "Bound": { output: ValueInput, inputs: Array<ValueInput>, } };
