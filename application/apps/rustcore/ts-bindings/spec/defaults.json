/* NOTE: in this JSON can be used comments placed between stars */
{
    "log_level": 1,
    "tests": {
        "observe": {
            "regular": {
                /* With numbers you can define, which tests should be executed. "execute_only": [1, 3] will run ONLY tests 1 and 3*/
                /* If "execute_only" isn't empty, all performance tests will be ignored*/
                "execute_only": [1, 4, 5, 6, 7, 8],
                "list": {
                    "1": "Test 1. Observe and grab content (text)",
                    "2": "Test 2. Observe and grab content (pcapng)",
                    "3": "Test 3. Observe and grab content (dlt)",
                    "4": "Test 4. Observe and grab content (attachments)",
                    "5": "Test 5. Observe and grab content (someip from pcapng)",
                    "6": "Test 6. Observe and grab content (someip from pcapng with fibex)",
                    "7": "Test 7. Observe and grab content (someip from pcap)",
                    "8": "Test 8. Observe and grab content (someip from pcap with fibex)"
                },
                "files": {
                    "pcapng": "../../../../application/developing/resources/many_interfaces.pcapng",
                    "dlt": "../../../../application/developing/resources/DTC_SP21.dlt",
                    "attachments": "../../../../application/developing/resources/attachments.dlt",
                    "someip-pcapng": "../../../../application/developing/resources/someip.pcapng",
                    "someip-pcap": "../../../../application/developing/resources/someip.pcap",
                    "someip-fibex": "../../../../application/developing/resources/someip.xml"
                }
            },
            "performance": {
                /* In false will prevent running performance tests */
                "run": true,
                "tests": {
                    "test1": {
                        "alias": "Performance Test 1",
                        "open_as": "text",
                        "file": "../../../../application/developing/resources/temp_readings3.txt",
                        "expectation_ms": 1000
                    },
                    "test2": {
                        "alias": "Performance Test 2",
                        "open_as": "dlt",
                        "file": "../../../../application/developing/resources/FzgProg_SP21.dlt",
                        "expectation_ms": 10000
                    },
                    "test3": {
                        "alias": "Performance Test you 3",
                        "open_as": "pcapng",
                        "file": "../../../../application/developing/resources/many_interfaces.pcapng",
                        "expectation_ms": 500
                    }
                }
            }
        },
        "stream": {
            "regular": {
                "execute_only": [],
                "list": {
                    "1": "Test 1. Observe and grab",
                    "2": "Test 2. Life cycle",
                    "3": "Test 3. Invalid data source",
                    "4": "Test 4. Updated stream",
                    "5": "Test 5. Updated stream search",
                    "6": "Test 6. Aborting stream",
                    "7": "Test 7. Multiple stream & SDE test"
                },
                "files": {
                }
            }
        },
        "indexes": {
            "regular": {
                "execute_only": [],
                "list": {
                    "1": "Test 1. Observe and grab"
                },
                "files": {
                }
            }
        },
        "jobs": {
            "regular": {
                "execute_only": [1,2,3,4,5,7,8],
                "list": {
                    "1": "Test 1. Cancelation testing",
                    "2": "Test 2. Wrong sequence test",
                    "3": "Test 3. Folder content listing",
                    "4": "Test 4. Get profiles",
                    "5": "Test 5. Get envvars",
                    "6": "Test 6. Get Someip statistic",
                    "7": "Test 7. Check if file is binary",
                    "8": "Test 8. Closing session with running task",
                    "9": "Test 6. Get DLT statistic"
                },
                "files": {
                    "someip-pcapng": "../../../../application/developing/resources/someip.pcapng",
                    "sample-txt": "../../../../application/developing/resources/sample_utf_8.txt"
                }
            }
        },
        "concat": {
            "regular": {
                "execute_only": [],
                "list": {
                    "1": "Test 1. Concat and grab content (text)",
                    "2": "Test 2. Concat and grab content (pcapng)",
                    "3": "Test 3. Concat and grab content (dlt)"
                },
                "files": {
                    "pcapng": "/storage/projects/esrlabs/logs-examples/test.pcapng",
                    "dlt": ["/storage/projects/esrlabs/logs-examples/dlt_receive_2.dlt", "/storage/projects/esrlabs/logs-examples/FzgProg_SPss.dlt"]
                }
            }
        },
        "ranges": {
            "regular": {
                "execute_only": [],
                "list": {
                    "1": "Test 1. Assign & grab ranges"
                }
            }
        },
        "search": {
            "regular": {
                "execute_only": [],
                "list": {
                    "1": "Test 1. Assign & single search",
                    "2": "Test 2. Assign & multiple search",
                    "3": "Test 3. Assign & zero search",
                    "4": "Test 4. Assign & single not case sensitive search",
                    "5": "Test 5. Assign & single word search",
                    "6": "Test 6. Assign & single search with crossing terms",
                    "7": "Test 7. Assign & repeated search"
                },
                "files": {
                }
            },
            "performance": {
                /* In false will prevent running performance tests */
                "run": true,
                "tests": {
                    "test1": {
                        "alias": "Assign & single search",
                        "file": "../../../../application/developing/resources/indexing_access_huge.log",
                        "expectation_ms": 100
                    },
                    "test2": {
                        "alias": "Assign & multiple search",
                        "file": "../../../../application/developing/resources/indexing_access_huge.log",
                        "expectation_ms": 100
                    },
                    "test3": {
                        "alias": "Assign & zero search",
                        "file": "../../../../application/developing/resources/indexing_access_huge.log",
                        "expectation_ms": 100
                    }
                }
            }
        },
        "values": {
            "regular": {
                "execute_only": [],
                "list": {
                    "1": "Test 1. Assign & single search",
                    "2": "Test 2. Assign & single search, getting updates"
                }
            }
        },
        "extract": {
            "regular": {
                "execute_only": [],
                "list": {
                    "1": "Test 1. Assign & extract data",
                    "2": "Test 2. Assign & extract multiple data"
                }
            }
        },
        "exporting": {
            "regular": {
                "execute_only": [],
                "list": {
                    "1": "Test 1. Assign & export",
                    "2": "Test 2. Concat & export",
                    "3": "Test 3. Assign & export search",
                    "4": "Test 4. DLT: Assign & export",
                    "5": "Test 5. DLT: Assign & export raw",
                    "6": "Test 6. DLT: Concat & export",
                    "7": "Test 7. DLT: Concat & export raw",
                    "8": "Test 8. DLT: Concat & export raw (multiple ranges)"

                },
                "files": {
                    "pcapng": "/storage/projects/esrlabs/logs-examples/test.pcapng",
                    "dlt": [
                        "/storage/projects/esrlabs/logs-examples/chipmunk_example_data-master/dlt/morten_1.dlt",
                        "/storage/projects/esrlabs/logs-examples/chipmunk_example_data-master/dlt/testfile.dlt"
                    ]
                }
            }
        },
        "cancel": {
            "regular": {
                "execute_only": [1],
                "list": {
                    "1": "Test 1. Cancel operation before done",
                    "2": "Test 2. Cancel operation after done",
                    /* Required text file*/
                    "3": "Test 3. Multiple search"
                },
                "files": {
                    "text": "/storage/projects/esrlabs/logs-examples/indexing_access_huge.log"
                },
                "spec": {
                    "cancel": {
                        /* Specification for test #3*/
                        "3": {
                            "terms": ["a", "b", "c", "d", "e", "f", "g", "r", "h", "t"],
                            "interval_ms": 250,
                            "timeout_last_search_ms": 10000
                        }
                    }
                }

            }
        },
        "errors": {
            "regular": {
                "execute_only": [],
                "list": {
                    "1": "Test 1. Error: search before observe",
                    "2": "Test 2. Error: Assign fake file",
                    "3": "Test 3. Error: Assign and grab invalid range",
                    "4": "Test 4. Error: Assign & single and grab invalid range",
                    "5": "Test 5. Error: Grab lines with negative length",
                    "6": "Test 6. Error: Grab lines with negative start",
                    "7": "Test 7. Error: Unexpected error on session state",
                    "8": "Test 8. Error: Unexpected error on session tracker",
                    "9": "Test 9. Destroy dead session",
                    "10": "Test 10. Search with invalid filters"
                }
            }
        },
        "map": {
            "regular": {
                "execute_only": [],
                "list": {
                    "1": "Test 1. Search map for file length < dataset length",
                    "2": "Test 2. Search map for 10 line file with match on first line",
                    "3": "Test 3. Search map for big file with multiple filters",
                    "4": "Test 4. Search map for file containing '>>'",
                    "5": "Test 5. Search map for file with ':'-match",
                    "6": "Test 6. Search map for file with '0.0:1'-match",
                    "7": "Test 7. Search map for file with 'word(0.0:1'-match"
                },
                "spec": {
                    "map": {
                        "1": {
                            "filesize": 3000,
                            "datasetLength": 6000
                        },
                        "2": {
                            "filesize": 10,
                            "datasetLength": 10
                        },
                        "3": {
                            "filesize": 6000,
                            "datasetLength": 6000
                        },
                        "4": {
                            "filesize": 10,
                            "datasetLength": 10
                        },
                        "5": {
                            "filesize": 1000,
                            "datasetLength": 1000
                        },
                        "6": {
                            "filesize": 1000,
                            "datasetLength": 1000
                        },
                        "7": {
                            "filesize": 1000,
                            "datasetLength": 1000
                        }
                    }
                }
            }
        },
        "promises": {
            "regular": {
                "execute_only": [],
                "list": {
                    "1": "Test 1. Regular",
                    "2": "Test 2. Cancellation",
                    "3": "Test 3. Cancellation delegation",
                    "4": "Test 4. Resolving bound",
                    "5": "Test 5. Rejecting bound",
                    "6": "Test 6. Cancel bound",
                    "7": "Test 7. Bound cancellation delegation",
                    "8": "Test 8. Events"
                },
                "files": {
                }
            }
        },
        "observing": {
            "regular": {
                "execute_only": [],
                "list": {
                    "1": "Test 1. Observer",
                    "2": "Test 2. Observe configuration (streams)",
                    "3": "Test 3. Observe configuration (origins)",
                    "4": "Test 4. Observe configuration (parsers)",
                    "5": "Test 5. Observe configuration updates (tracking)",
                    "6": "Test 6. Observe configuration (overwriting)"
                },
                "files": {
                }
            }
        }
    }
}
