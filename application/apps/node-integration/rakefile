NEON = './node_modules/.bin/neon'
TSC = './node_modules/.bin/tsc'
ELECTRON_BUILD_ENV = 'node_modules/.bin/electron-build-env'
TEST_RUNNER = './node_modules/.bin/jasmine-ts'
LOCAL_EXAMPLE_DIR = "#{Dir.home}/tmp/logviewer_usecases"
TESTS_JS_REQUIRE = 'require("./dist/apps/indexer-neon/src/tests.js")'
HUGE_LOGFILE = "#{LOCAL_EXAMPLE_DIR}/indexing/access_huge.log"

desc 'build'
task :build do
  sh "#{TSC} -p ./tsconfig.json"
  sh "#{NEON} build --release"
  # sh "#{ELECTRON_BUILD_ENV} neon build"
end

desc 'test'
task :test do
  sh TEST_RUNNER
end

desc 'clean'
task :clean do
  sh "#{NEON} clean"
end

desc 'run'
task :run => :build do
  system('node ./lib/index.js')
end


def exec_node_expression(node_exp)
  puts "executing rust function: #{node_exp}"
  # system({ 'ELECTRON_RUN_AS_NODE' => 'true' }, "./node_modules/.bin/electron -e '#{node_exp}'")
  system('node ./lib/index.js')
end

def escape_strings(arg)
  if arg.class == Integer
    arg.to_s
  else
    "\"#{arg}\""
  end
end

def call_test_function(function_name, *args)
  func_args = args.map { |a| escape_strings(a) }.join(',')
  node_exp = "#{TESTS_JS_REQUIRE}.#{function_name}(#{func_args})"
  exec_node_expression(node_exp)
end
