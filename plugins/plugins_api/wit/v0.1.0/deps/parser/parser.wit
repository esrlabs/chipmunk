package chipmunk:parser@0.1.0;

/// The definitions which must be provided by the parser plugins.
interface parser {
  use chipmunk:shared/shared-types@0.1.0.{version, init-error, config-item, config-schema-item};
  use parse-types.{render-options, parser-config, parse-return, parse-error};
 
  /// Provides the current semantic version of the plugin.
  /// This version is for the plugin only and is different from the plugin's API version.
  get-version: func() -> version;

  /// Provides the schemas for the configurations required by the plugin, which
  /// will be specified by the users.
  ///
  /// These schemas define the expected structure, types, and constraints
  /// for plugin-specific configurations. The values of these configurations
  /// will be passed to the initializing method of the parser.
  get-config-schemas: func() -> list<config-schema-item>;

  /// Provides the custom render options to be rendered in log view, enabling the users to 
  /// change the visibility on the log columns when provided.
  /// This function can be called before initializing the plugin instance.
  get-render-options: func() -> render-options;
  
  /// Initialize the parser with the given configurations
  init: func(general-configs: parser-config, plugin-configs: list<config-item>) -> result<_, init-error>;

  /// Parse the given bytes returning a list of parsed items, 
  /// or parse error if an error occurred and no item has been parsed.
  parse: func(data: list<u8>, timestamp: option<u64>) -> result<list<parse-return>, parse-error>;
}
