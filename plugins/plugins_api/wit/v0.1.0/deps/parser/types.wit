package chipmunk:parser@0.1.0;

/// Contains the types definitions used for the development of parser plugins. 
interface parse-types {
  use chipmunk:shared/logging@0.1.0.{level};
  use chipmunk:shared/shared-types@0.1.0.{columns-render-options};

  /// General configurations related to all parsers
  record parser-config {
    log-level: level,
  }

  /// Return item for parsing call
  record parse-return {
    /// Parsed item or None if skipped
    value: option<parse-yield>,
    /// Consumed bytes count
    consumed: u64,
  }

  /// Represents a parsed message with either a single line or multiple columns.
  variant parsed-message {
    /// Single string representing the message.
    line(string),
    /// List of strings representing the message split into columns.
    columns(list<string>),
  }

  /// Represents a parsed item
  variant parse-yield {
    message(parsed-message),
    attachment(attachment),
    message-and-attachment(tuple<parsed-message, attachment>),
  }

  /// Attachment included within parsed item
  record attachment {
    name: string,
    size: u64,
    created-date: option<string>,
    modified-date: option<string>,
    /// The indexes of the message within the original trace (0-based).
    messages: list<u64>,
    /// Data as bytes
    data: list<u8>,
  }

  variant parse-error {
    unrecoverable(string),
    parse(string),
    incomplete,
    eof,
  }

  /// Provides additional information to be rendered in the log view.
  record render-options {
    /// Rendering information for the column if log messages have multiple columns.
    /// The count of the provided columns must match the count of the columns of each log message as well.
    columns-options: option<columns-render-options>,
  }
}

