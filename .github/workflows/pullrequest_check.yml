name: Checks

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
      - labeled
  workflow_dispatch:

jobs:
  ts_and_rust_lint:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: libudev-dev
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev
      - name: install node
        uses: actions/setup-node@master
        with:
          node-version: "lts/*"
      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@v1.9.0
      - name: set sccache env var
        run: |
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.7
      - name: Install nj-cli
        run: cargo binstall nj-cli
      - name: enable corepack for yarnpkg upgrade
        run: corepack enable
      - name: Install Build CLI tool
        run: cargo install --path=cli/development-cli --locked
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"
      - name: install wasm-pack
        run: cargo binstall wasm-pack
      - name: JS/TS linting
        timeout-minutes: 30
        run: cargo chipmunk lint -u immediate
      - name: TypeScript Check - Client Application
        working-directory: application/client
        run: yarn run check
      - name: TypeScript Check - Holder Application
        working-directory: application/holder
        run: yarn run check
      - name: TypeScript Check - Platform Application
        working-directory: application/platform
        run: yarn run check

  integration_and_unit_tests:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: libudev-dev
        run: |
          sudo apt-get update
          sudo apt-get install -y libudev-dev
      - name: install node
        uses: actions/setup-node@master
        with:
          node-version: "lts/*"
      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@v1.9.0
      - name: set sccache env var
        run: |
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.7
      - name: Install nj-cli
        run: cargo binstall nj-cli
      - name: enable corepack for yarnpkg upgrade
        run: |
          npm install tslib
          corepack enable
      - name: Install Build CLI tool
        run: cargo install --path=cli/development-cli --locked
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"
      - name: install wasm-pack
        run: cargo binstall wasm-pack
      - name: Execute tests
        timeout-minutes: 30
        env:
          # Environment variable is needed for snapshot testing in Rust via `insta` crate
          CI: true
        run: cargo chipmunk test -u immediate
      - name: Execute cli tests
        if: contains(github.event.pull_request.labels.*.name, 'build-cli')
        timeout-minutes: 30
        run: python3 integration_tests/run_all.py
        working-directory: ./cli/development-cli
